
//! Autogenerated weights for `pallet_task`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-15, STEPS: `100`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 100
// --repeat
// 50
// --output
// ./runtime/src/weights/


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_task`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_task::WeightInfo for WeightInfo<T> {
	// Storage: Profile Profiles (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Task TasksOwned (r:1 w:1)
	// Storage: Task TaskCount (r:1 w:1)
	// Storage: Task Tasks (r:0 w:1)
	fn create_task(_s: u32, _x: u32, ) -> Weight {
		(38_660_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Task Tasks (r:1 w:1)
	// Storage: Task TasksOwned (r:1 w:1)
	fn start_task(_s: u32, _x: u32, ) -> Weight {
		(45_461_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Task Tasks (r:1 w:1)
	// Storage: Task TasksOwned (r:1 w:1)
	fn complete_task(_s: u32, _x: u32, ) -> Weight {
		(18_288_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Task Tasks (r:1 w:1)
	// Storage: Task TasksOwned (r:1 w:1)
	// Storage: Task TaskCount (r:1 w:1)
	fn remove_task(_s: u32, _x: u32, ) -> Weight {
		(22_757_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
