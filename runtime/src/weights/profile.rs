
//! Autogenerated weights for `pallet_profile`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-02-02, STEPS: `70`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_profile
// --extrinsic=*
// --steps
// 70
// --repeat
// 20
// --output
// ./pallets/weights/


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_profile`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_profile::weights::WeightInfo for WeightInfo<T> {
	// Storage: Profile Profiles (r:1 w:1)
	// Storage: Profile ProfileCount (r:1 w:1)
	fn create_profile() -> Weight {
		(19_220_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Profile Profiles (r:1 w:1)
	fn update_profile() -> Weight {
		(15_065_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Profile Profiles (r:1 w:1)
	// Storage: Profile ProfileCount (r:1 w:1)
	fn remove_profile() -> Weight {
		(16_872_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
