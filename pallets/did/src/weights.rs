// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_did
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-25, STEPS: `100`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:

// ./target/release/node-template

// benchmark

// --chain

// dev

// --execution

// wasm

// --wasm-execution

// compiled

// --pallet

// pallet_did

// --extrinsic

// *

// --steps

// 100

// --repeat

// 50

// --output

// ./pallets/did/src/weights.rs

// --template

// .maintain/frame-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_did.
pub trait WeightInfo {
	
	fn add_delegate() -> Weight;
	
	fn change_owner() -> Weight;
	
	fn revoke_delegate() -> Weight;
	
	fn add_attribute() -> Weight;
	
	fn revoke_attribute() -> Weight;
	
	fn delete_attribute() -> Weight;
	
}

/// Weights for pallet_did using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {

	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did DelegateOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn add_delegate() -> Weight {
		(37_543_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn change_owner() -> Weight {
		(33_312_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did DelegateOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn revoke_delegate() -> Weight {
		(43_483_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:1)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn add_attribute() -> Weight {
		(50_612_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:0)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn revoke_attribute() -> Weight {
		(52_951_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:0)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn delete_attribute() -> Weight {
		(47_504_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
}

// For backwards compatibility and tests
impl WeightInfo for () {
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did DelegateOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn add_delegate() -> Weight {
		(37_543_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn change_owner() -> Weight {
		(33_312_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did DelegateOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn revoke_delegate() -> Weight {
		(43_483_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:1)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn add_attribute() -> Weight {
		(50_612_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:0)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn revoke_attribute() -> Weight {
		(52_951_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Did OwnerOf (r:1 w:0)
	
	// Storage: Did AttributeNonce (r:1 w:0)
	
	// Storage: Did AttributeOf (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn delete_attribute() -> Weight {
		(47_504_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
}
